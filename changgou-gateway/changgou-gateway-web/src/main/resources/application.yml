server:
  port: 8001
spring:
  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 192.168.211.132
    port: 6379
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
            #唯一标识
          - id: changgou_goods_route
            #用户请求需要路由到的服务
            #uri: http://localhost:18081
            #lb:LoadBalancerClient   goods:微服务名称
            uri: lb://goods
            predicates:
            #域名规则配置，路由到uri
            #- Host=cloud.itheima.com**
            #请求路径：所有已brand开头的都路由到http://localhost:18081微服务
            #- Path=/brand/**
            - Path=/api/goods/**
            filters:
            #添加前缀
            #- PrefixPath=/brand
            #将请求路径中第一个路径去掉，路径以/区分，一个/代表一个路径
            - StripPrefix=1
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
              args:
                #用户唯一识别标志
                key-resolver: "#{@ipKeyResolver}"
                #每秒允许1个请求
                redis-rate-limiter.replenishRate: 1
                #允许并发4个请求
                redis-rate-limiter.burstCapacity: 4
          - id: changgou_user_route
            # 用户请求路由到的服务地址
            # lb:使用 LoadBalancerClient，实现负载均衡，goods是微服务的名称[主要应用于集群环境]
            uri: lb://user
            # 路由断言，路由配置规则
            predicates:
            - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
            filters:
            - StripPrefix=1
          - id: changgou_order_route
            # 用户请求路由到的服务地址
            # lb:使用 LoadBalancerClient，实现负载均衡，goods是微服务的名称[主要应用于集群环境]
            uri: lb://order
            # 路由断言，路由配置规则
            predicates:
            - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
            filters:
            - StripPrefix=1
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true